==5153== Memcheck, a memory error detector
==5153== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==5153== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==5153== Command: ./ll_sum 1234
==5153== 
1
2
==5302== Conditional jump or move depends on uninitialised value(s)
==5302==    at 0x4E87B83: vfprintf (vfprintf.c:1631)
==5302==    by 0x4E8F898: printf (printf.c:33)
==5302==    by 0x4006FE: main (ll_sum.c:32)
==5302== 
==5302== Use of uninitialised value of size 8
==5302==    at 0x4E8476B: _itoa_word (_itoa.c:179)
==5302==    by 0x4E8812C: vfprintf (vfprintf.c:1631)
==5302==    by 0x4E8F898: printf (printf.c:33)
==5302==    by 0x4006FE: main (ll_sum.c:32)
==5302== 
==5302== Conditional jump or move depends on uninitialised value(s)
==5302==    at 0x4E84775: _itoa_word (_itoa.c:179)
==5302==    by 0x4E8812C: vfprintf (vfprintf.c:1631)
==5302==    by 0x4E8F898: printf (printf.c:33)
==5302==    by 0x4006FE: main (ll_sum.c:32)
==5302== 
==5302== Conditional jump or move depends on uninitialised value(s)
==5302==    at 0x4E881AF: vfprintf (vfprintf.c:1631)
==5302==    by 0x4E8F898: printf (printf.c:33)
==5302==    by 0x4006FE: main (ll_sum.c:32)
==5302== 
==5302== Conditional jump or move depends on uninitialised value(s)
==5302==    at 0x4E87C59: vfprintf (vfprintf.c:1631)
==5302==    by 0x4E8F898: printf (printf.c:33)
==5302==    by 0x4006FE: main (ll_sum.c:32)
==5302== 
==5302== Conditional jump or move depends on uninitialised value(s)
==5302==    at 0x4E8841A: vfprintf (vfprintf.c:1631)
==5302==    by 0x4E8F898: printf (printf.c:33)
==5302==    by 0x4006FE: main (ll_sum.c:32)
==5302== 
==5302== Conditional jump or move depends on uninitialised value(s)
==5302==    at 0x4E87CAB: vfprintf (vfprintf.c:1631)
==5302==    by 0x4E8F898: printf (printf.c:33)
==5302==    by 0x4006FE: main (ll_sum.c:32)
==5302== 
==5302== Conditional jump or move depends on uninitialised value(s)
==5302==    at 0x4E87CE2: vfprintf (vfprintf.c:1631)
==5302==    by 0x4E8F898: printf (printf.c:33)
==5302==    by 0x4006FE: main (ll_sum.c:32)
==5302== 
The sum of the inputs is 3.
==5302== 
==5302== HEAP SUMMARY:
==5302==     in use at exit: 48 bytes in 3 blocks
==5302==   total heap usage: 5 allocs, 2 frees, 2,096 bytes allocated
==5302== 
==5302== 48 (16 direct, 32 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==5302==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5302==    by 0x400666: main (ll_sum.c:18)
==5302== 
==5302== LEAK SUMMARY:
==5302==    definitely lost: 16 bytes in 1 blocks
==5302==    indirectly lost: 32 bytes in 2 blocks
==5302==      possibly lost: 0 bytes in 0 blocks
==5302==    still reachable: 0 bytes in 0 blocks
==5302==         suppressed: 0 bytes in 0 blocks
==5302== 
==5302== For counts of detected and suppressed errors, rerun with: -v
==5302== Use --track-origins=yes to see where uninitialised values come from
==5302== ERROR SUMMARY: 9 errors from 9 contexts (suppressed: 0 from 0)
yangme16@dh2020pc18:~/209_repo/t04$ 





yangme16@dh2020pc18:~/209_repo/t04$ gcc -Wall -g -o1 -o ll_sum ll_sum.c
yangme16@dh2020pc18:~/209_repo/t04$ valgrind --leak-check=yes ./ll_sum
==26834== Memcheck, a memory error detector
==26834== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==26834== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==26834== Command: ./ll_sum
==26834== 
1
2
3
The sum of the inputs is 6.
==26834== 
==26834== HEAP SUMMARY:
==26834==     in use at exit: 0 bytes in 0 blocks
==26834==   total heap usage: 6 allocs, 6 frees, 2,112 bytes allocated
==26834== 
==26834== All heap blocks were freed -- no leaks are possible
==26834== 
==26834== For counts of detected and suppressed errors, rerun with: -v
==26834== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
yangme16@dh2020pc18:~/209_repo/t04$ 

