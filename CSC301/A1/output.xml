<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.6 on linux)" generated="20200301 17:09:07.545" rpa="false">
<suite id="s1" name="testPutAndGetTests" source="/virtual/maramgan/a1-repos/a1-02-27-2020-07-17-58/testPutAndGetTests.robot">
<test id="s1-t1" name="TestAddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.687" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.687" endtime="20200301 17:09:07.687"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.687" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.687" endtime="20200301 17:09:07.687"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Swetha Maramganty</arg>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.688" level="INFO">${params} = {'name': 'Swetha Maramganty', 'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200301 17:09:07.687" endtime="20200301 17:09:07.688"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.688" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Swetha Maramganty", "actorId": "nm1"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.729" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.688" endtime="20200301 17:09:07.729"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.729" endtime="20200301 17:09:07.729"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.686" endtime="20200301 17:09:07.729" critical="yes"></status>
</test>
<test id="s1-t2" name="Test2AddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.730" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.730" endtime="20200301 17:09:07.730"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.731" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.730" endtime="20200301 17:09:07.731"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Arnold Rosenbloom</arg>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.731" level="INFO">${params} = {'name': 'Arnold Rosenbloom', 'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 17:09:07.731" endtime="20200301 17:09:07.731"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.731" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Arnold Rosenbloom", "actorId": "nm2"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.739" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.731" endtime="20200301 17:09:07.739"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.739" endtime="20200301 17:09:07.739"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.730" endtime="20200301 17:09:07.739" critical="yes"></status>
</test>
<test id="s1-t3" name="TestAddKevinBacon200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.740" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.740" endtime="20200301 17:09:07.740"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.740" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.740" endtime="20200301 17:09:07.740"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Kevin Bacon</arg>
<arg>actorId=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.740" level="INFO">${params} = {'name': 'Kevin Bacon', 'actorId': 'nm0000102'}</msg>
<status status="PASS" starttime="20200301 17:09:07.740" endtime="20200301 17:09:07.740"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.741" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Kevin Bacon", "actorId": "nm0000102"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.747" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.741" endtime="20200301 17:09:07.747"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.747" endtime="20200301 17:09:07.747"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.739" endtime="20200301 17:09:07.748" critical="yes"></status>
</test>
<test id="s1-t4" name="Test3AddActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.748" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.748" endtime="20200301 17:09:07.748"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.748" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.748" endtime="20200301 17:09:07.749"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Ilir Dema</arg>
<arg>actorId=nm3</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.749" level="INFO">${params} = {'name': 'Ilir Dema', 'actorId': 'nm3'}</msg>
<status status="PASS" starttime="20200301 17:09:07.749" endtime="20200301 17:09:07.749"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.749" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Ilir Dema", "actorId": "nm3"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.756" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.749" endtime="20200301 17:09:07.756"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.756" endtime="20200301 17:09:07.756"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.748" endtime="20200301 17:09:07.756" critical="yes"></status>
</test>
<test id="s1-t5" name="TestAddActorKeepExistingNode400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.757" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.757" endtime="20200301 17:09:07.757"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.757" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.757" endtime="20200301 17:09:07.757"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Shabaz Badshah</arg>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.758" level="INFO">${params} = {'name': 'Shabaz Badshah', 'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 17:09:07.757" endtime="20200301 17:09:07.758"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.758" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Shabaz Badshah", "actorId": "nm2"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.763" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.758" endtime="20200301 17:09:07.763"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:07.764" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.764" endtime="20200301 17:09:07.764"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.756" endtime="20200301 17:09:07.764" critical="yes"></status>
</test>
<test id="s1-t6" name="TestAddActorBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.765" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.764" endtime="20200301 17:09:07.765"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.765" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.765" endtime="20200301 17:09:07.765"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Emma Stone</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.765" level="INFO">${params} = {'name': 'Emma Stone'}</msg>
<status status="PASS" starttime="20200301 17:09:07.765" endtime="20200301 17:09:07.765"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addActor</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.766" level="INFO">PUT Request using : uri=/api/v1/addActor, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Emma Stone"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.767" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.765" endtime="20200301 17:09:07.767"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:07.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.767" endtime="20200301 17:09:07.768"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.764" endtime="20200301 17:09:07.768" critical="yes"></status>
</test>
<test id="s1-t7" name="TestAddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.768" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.768" endtime="20200301 17:09:07.768"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.769" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.768" endtime="20200301 17:09:07.769"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Up</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.769" level="INFO">${params} = {'name': 'Up', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 17:09:07.769" endtime="20200301 17:09:07.769"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.769" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Up", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.776" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.769" endtime="20200301 17:09:07.776"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.777" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.776" endtime="20200301 17:09:07.777"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.768" endtime="20200301 17:09:07.777" critical="yes"></status>
</test>
<test id="s1-t8" name="Test2AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.777" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.777" endtime="20200301 17:09:07.778"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.778" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.778" endtime="20200301 17:09:07.778"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Harry Potter</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.778" level="INFO">${params} = {'name': 'Harry Potter', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 17:09:07.778" endtime="20200301 17:09:07.778"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.778" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Harry Potter", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.785" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.778" endtime="20200301 17:09:07.785"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.785" endtime="20200301 17:09:07.786"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.777" endtime="20200301 17:09:07.786" critical="yes"></status>
</test>
<test id="s1-t9" name="Test3AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.786" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.786" endtime="20200301 17:09:07.787"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.787" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.787" endtime="20200301 17:09:07.787"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Patriots Day</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.788" level="INFO">${params} = {'name': 'Patriots Day', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200301 17:09:07.787" endtime="20200301 17:09:07.788"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.788" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Patriots Day", "movieId": "mv001"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.792" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.788" endtime="20200301 17:09:07.792"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.792" endtime="20200301 17:09:07.793"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.786" endtime="20200301 17:09:07.793" critical="yes"></status>
</test>
<test id="s1-t10" name="Test4AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.793" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.793" endtime="20200301 17:09:07.794"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.794" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.794" endtime="20200301 17:09:07.794"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=LOTR</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.794" level="INFO">${params} = {'name': 'LOTR', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200301 17:09:07.794" endtime="20200301 17:09:07.794"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.795" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "LOTR", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.800" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.794" endtime="20200301 17:09:07.800"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.800" endtime="20200301 17:09:07.800"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.793" endtime="20200301 17:09:07.800" critical="yes"></status>
</test>
<test id="s1-t11" name="Test5AddMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.801" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.801" endtime="20200301 17:09:07.801"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.801" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.801" endtime="20200301 17:09:07.801"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=RV</arg>
<arg>movieId=mv003</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.801" level="INFO">${params} = {'name': 'RV', 'movieId': 'mv003'}</msg>
<status status="PASS" starttime="20200301 17:09:07.801" endtime="20200301 17:09:07.801"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.802" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "RV", "movieId": "mv003"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.807" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.802" endtime="20200301 17:09:07.807"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.807" endtime="20200301 17:09:07.807"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.800" endtime="20200301 17:09:07.808" critical="yes"></status>
</test>
<test id="s1-t12" name="TestAddMovieKeepExistingNode400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.808" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.808" endtime="20200301 17:09:07.808"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.809" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.808" endtime="20200301 17:09:07.809"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Cinderalla</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.809" level="INFO">${params} = {'name': 'Cinderalla', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 17:09:07.809" endtime="20200301 17:09:07.809"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.809" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Cinderalla", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.814" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.809" endtime="20200301 17:09:07.814"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:07.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.814" endtime="20200301 17:09:07.814"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.808" endtime="20200301 17:09:07.814" critical="yes"></status>
</test>
<test id="s1-t13" name="TestAddMovieBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.815" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.815" endtime="20200301 17:09:07.815"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.815" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.815" endtime="20200301 17:09:07.815"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=Graduation</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.816" level="INFO">${params} = {'name': 'Graduation'}</msg>
<status status="PASS" starttime="20200301 17:09:07.816" endtime="20200301 17:09:07.816"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addMovie</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.816" level="INFO">PUT Request using : uri=/api/v1/addMovie, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"name": "Graduation"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.818" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.816" endtime="20200301 17:09:07.818"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:07.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.818" endtime="20200301 17:09:07.818"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.815" endtime="20200301 17:09:07.818" critical="yes"></status>
</test>
<test id="s1-t14" name="TestAddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.819" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.819" endtime="20200301 17:09:07.819"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.819" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.819" endtime="20200301 17:09:07.819"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.819" level="INFO">${params} = {'actorId': 'nm1', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 17:09:07.819" endtime="20200301 17:09:07.819"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.820" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm1", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.840" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.820" endtime="20200301 17:09:07.840"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.840" endtime="20200301 17:09:07.840"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.818" endtime="20200301 17:09:07.840" critical="yes"></status>
</test>
<test id="s1-t15" name="Test2AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.841" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.841" endtime="20200301 17:09:07.841"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.841" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.841" endtime="20200301 17:09:07.841"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.842" level="INFO">${params} = {'actorId': 'nm1', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200301 17:09:07.842" endtime="20200301 17:09:07.842"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.842" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm1", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.853" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.842" endtime="20200301 17:09:07.853"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.853" endtime="20200301 17:09:07.854"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.841" endtime="20200301 17:09:07.854" critical="yes"></status>
</test>
<test id="s1-t16" name="Test3AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.855" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.854" endtime="20200301 17:09:07.855"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.855" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.855" endtime="20200301 17:09:07.855"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.855" level="INFO">${params} = {'actorId': 'nm3', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 17:09:07.855" endtime="20200301 17:09:07.855"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.856" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm3", "movieId": "tt2"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.861" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.855" endtime="20200301 17:09:07.861"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.861" endtime="20200301 17:09:07.862"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.854" endtime="20200301 17:09:07.862" critical="yes"></status>
</test>
<test id="s1-t17" name="Test4AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.862" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.862" endtime="20200301 17:09:07.863"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.863" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.863" endtime="20200301 17:09:07.863"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.863" level="INFO">${params} = {'actorId': 'nm3', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 17:09:07.863" endtime="20200301 17:09:07.863"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.864" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm3", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.869" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.863" endtime="20200301 17:09:07.869"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.869" endtime="20200301 17:09:07.870"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.862" endtime="20200301 17:09:07.870" critical="yes"></status>
</test>
<test id="s1-t18" name="Test5AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.870" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.870" endtime="20200301 17:09:07.870"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.871" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.871" endtime="20200301 17:09:07.871"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.871" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200301 17:09:07.871" endtime="20200301 17:09:07.871"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.872" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv001"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.877" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.871" endtime="20200301 17:09:07.877"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.877" endtime="20200301 17:09:07.878"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.870" endtime="20200301 17:09:07.878" critical="yes"></status>
</test>
<test id="s1-t19" name="Test6AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.878" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.878" endtime="20200301 17:09:07.878"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.879" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.878" endtime="20200301 17:09:07.879"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv002</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.879" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv002'}</msg>
<status status="PASS" starttime="20200301 17:09:07.879" endtime="20200301 17:09:07.879"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.879" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv002"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.885" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.879" endtime="20200301 17:09:07.885"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.885" endtime="20200301 17:09:07.886"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.878" endtime="20200301 17:09:07.886" critical="yes"></status>
</test>
<test id="s1-t20" name="Test7AddRelation200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.886" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.886" endtime="20200301 17:09:07.886"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.887" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.886" endtime="20200301 17:09:07.887"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv003</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.887" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv003'}</msg>
<status status="PASS" starttime="20200301 17:09:07.887" endtime="20200301 17:09:07.887"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.887" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "mv003"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.893" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.887" endtime="20200301 17:09:07.893"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.893" endtime="20200301 17:09:07.893"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.886" endtime="20200301 17:09:07.893" critical="yes"></status>
</test>
<test id="s1-t21" name="TestAddRelationBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.894" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.894" endtime="20200301 17:09:07.894"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.894" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.894" endtime="20200301 17:09:07.894"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.895" level="INFO">${params} = {'actor': 'nm0000102'}</msg>
<status status="PASS" starttime="20200301 17:09:07.894" endtime="20200301 17:09:07.895"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.895" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actor": "nm0000102"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.898" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.895" endtime="20200301 17:09:07.898"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:07.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.898" endtime="20200301 17:09:07.898"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.894" endtime="20200301 17:09:07.898" critical="yes"></status>
</test>
<test id="s1-t22" name="TestAddRelationMovieNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.899" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.899" endtime="20200301 17:09:07.899"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.899" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.899" endtime="20200301 17:09:07.899"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.899" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 17:09:07.899" endtime="20200301 17:09:07.899"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.900" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "nm0000102", "movieId": "notexist"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.903" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.899" endtime="20200301 17:09:07.903"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 17:09:07.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.903" endtime="20200301 17:09:07.903"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.898" endtime="20200301 17:09:07.903" critical="yes"></status>
</test>
<test id="s1-t23" name="TestAddRelationActorNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.904" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.904" endtime="20200301 17:09:07.904"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.904" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.904" endtime="20200301 17:09:07.904"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.905" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 17:09:07.904" endtime="20200301 17:09:07.905"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.905" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "notexist", "movieId": "tt1"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.908" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.905" endtime="20200301 17:09:07.908"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 17:09:07.908" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.908" endtime="20200301 17:09:07.908"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.903" endtime="20200301 17:09:07.908" critical="yes"></status>
</test>
<test id="s1-t24" name="TestAddRelationBothNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.909" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.909" endtime="20200301 17:09:07.909"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.909" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.909" endtime="20200301 17:09:07.909"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.909" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 17:09:07.909" endtime="20200301 17:09:07.910"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/addRelationship</arg>
<arg>data=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.910" level="INFO">PUT Request using : uri=/api/v1/addRelationship, params=None, files=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data={"actorId": "notexist", "movieId": "notexist"} 
json=None</msg>
<msg timestamp="20200301 17:09:07.913" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.910" endtime="20200301 17:09:07.913"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 17:09:07.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.913" endtime="20200301 17:09:07.913"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.908" endtime="20200301 17:09:07.913" critical="yes"></status>
</test>
<test id="s1-t25" name="TestGetActor200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.914" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.914" endtime="20200301 17:09:07.914"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200301 17:09:07.914" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.914" endtime="20200301 17:09:07.914"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.915" level="INFO">${params} = {'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200301 17:09:07.915" endtime="20200301 17:09:07.915"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>headers=${header}</arg>
<arg>json=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.915" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm1'}</msg>
<msg timestamp="20200301 17:09:07.924" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.915" endtime="20200301 17:09:07.924"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.924" endtime="20200301 17:09:07.925"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.913" endtime="20200301 17:09:07.925" critical="yes"></status>
</test>
<test id="s1-t26" name="TestGetActorExistsButNoMovies200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.925" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.925" endtime="20200301 17:09:07.925"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${header}</var>
</assign>
<msg timestamp="20200301 17:09:07.926" level="INFO">${header} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.926" endtime="20200301 17:09:07.926"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.926" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 17:09:07.926" endtime="20200301 17:09:07.926"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>headers=${header}</arg>
<arg>json=${params}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.926" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200301 17:09:07.930" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.926" endtime="20200301 17:09:07.930"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.930" endtime="20200301 17:09:07.931"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.925" endtime="20200301 17:09:07.931" critical="yes"></status>
</test>
<test id="s1-t27" name="TestGetActorBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.931" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.931" endtime="20200301 17:09:07.932"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.932" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.932" endtime="20200301 17:09:07.932"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>act=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.932" level="INFO">${params} = {'act': 'notexist'}</msg>
<status status="PASS" starttime="20200301 17:09:07.932" endtime="20200301 17:09:07.932"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.933" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'act': 'notexist'}</msg>
<msg timestamp="20200301 17:09:07.934" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.932" endtime="20200301 17:09:07.934"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:07.935" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.934" endtime="20200301 17:09:07.935"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.931" endtime="20200301 17:09:07.935" critical="yes"></status>
</test>
<test id="s1-t28" name="TestGetActorNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.935" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.935" endtime="20200301 17:09:07.935"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.936" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.935" endtime="20200301 17:09:07.936"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.936" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 17:09:07.936" endtime="20200301 17:09:07.936"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getActor</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.936" level="INFO">GET Request using : uri=/api/v1/getActor, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200301 17:09:07.940" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.936" endtime="20200301 17:09:07.940"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 17:09:07.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.940" endtime="20200301 17:09:07.940"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.935" endtime="20200301 17:09:07.941" critical="yes"></status>
</test>
<test id="s1-t29" name="TestGetMovie200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.941" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.941" endtime="20200301 17:09:07.941"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.942" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.942" endtime="20200301 17:09:07.942"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movieId=tt1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.942" level="INFO">${params} = {'movieId': 'tt1'}</msg>
<status status="PASS" starttime="20200301 17:09:07.942" endtime="20200301 17:09:07.942"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.942" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movieId': 'tt1'}</msg>
<msg timestamp="20200301 17:09:07.952" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.942" endtime="20200301 17:09:07.952"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.952" endtime="20200301 17:09:07.953"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.941" endtime="20200301 17:09:07.953" critical="yes"></status>
</test>
<test id="s1-t30" name="TestGetMovieNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.953" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.953" endtime="20200301 17:09:07.953"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.954" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.954" endtime="20200301 17:09:07.954"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.954" level="INFO">${params} = {'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 17:09:07.954" endtime="20200301 17:09:07.954"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.954" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movieId': 'notexist'}</msg>
<msg timestamp="20200301 17:09:07.957" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.954" endtime="20200301 17:09:07.957"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 17:09:07.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.957" endtime="20200301 17:09:07.958"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.953" endtime="20200301 17:09:07.958" critical="yes"></status>
</test>
<test id="s1-t31" name="TestGetMovieBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.959" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.958" endtime="20200301 17:09:07.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.959" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.959" endtime="20200301 17:09:07.959"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>movie=742053</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.959" level="INFO">${params} = {'movie': '742053'}</msg>
<status status="PASS" starttime="20200301 17:09:07.959" endtime="20200301 17:09:07.959"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/getMovie</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.960" level="INFO">GET Request using : uri=/api/v1/getMovie, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'movie': '742053'}</msg>
<msg timestamp="20200301 17:09:07.962" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.960" endtime="20200301 17:09:07.962"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:07.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.962" endtime="20200301 17:09:07.962"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.958" endtime="20200301 17:09:07.962" critical="yes"></status>
</test>
<test id="s1-t32" name="TestGetRelationship200True">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.963" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.963" endtime="20200301 17:09:07.963"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.963" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.963" endtime="20200301 17:09:07.963"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
<arg>movieId=mv001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.964" level="INFO">${params} = {'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<status status="PASS" starttime="20200301 17:09:07.963" endtime="20200301 17:09:07.964"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.964" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm0000102', 'movieId': 'mv001'}</msg>
<msg timestamp="20200301 17:09:07.976" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.964" endtime="20200301 17:09:07.976"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.976" endtime="20200301 17:09:07.976"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>nm0000102</arg>
</arguments>
<status status="PASS" starttime="20200301 17:09:07.976" endtime="20200301 17:09:07.976"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>mv001</arg>
</arguments>
<status status="PASS" starttime="20200301 17:09:07.977" endtime="20200301 17:09:07.977"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>${true}</arg>
</arguments>
<status status="PASS" starttime="20200301 17:09:07.977" endtime="20200301 17:09:07.978"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.962" endtime="20200301 17:09:07.978" critical="yes"></status>
</test>
<test id="s1-t33" name="TestGetRelationshipIncompleteBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.978" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.978" endtime="20200301 17:09:07.978"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.979" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.979" endtime="20200301 17:09:07.979"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=9999</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.979" level="INFO">${params} = {'actor': '9999'}</msg>
<status status="PASS" starttime="20200301 17:09:07.979" endtime="20200301 17:09:07.979"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.979" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '9999'}</msg>
<msg timestamp="20200301 17:09:07.981" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.979" endtime="20200301 17:09:07.981"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:07.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.981" endtime="20200301 17:09:07.981"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.978" endtime="20200301 17:09:07.981" critical="yes"></status>
</test>
<test id="s1-t34" name="TestGetRelationshipBothNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.982" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.982" endtime="20200301 17:09:07.982"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.982" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.982" endtime="20200301 17:09:07.982"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
<arg>movieId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.983" level="INFO">${params} = {'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 17:09:07.983" endtime="20200301 17:09:07.983"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.983" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist', 'movieId': 'notexist'}</msg>
<msg timestamp="20200301 17:09:07.986" level="INFO">${resp} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.983" endtime="20200301 17:09:07.986"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>404</arg>
</arguments>
<msg timestamp="20200301 17:09:07.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.986" endtime="20200301 17:09:07.987"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.982" endtime="20200301 17:09:07.987" critical="yes"></status>
</test>
<test id="s1-t35" name="TestGetRelationshipNoRel200False">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.987" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.987" endtime="20200301 17:09:07.988"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.988" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.988" endtime="20200301 17:09:07.988"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
<arg>movieId=tt2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.988" level="INFO">${params} = {'actorId': 'nm2', 'movieId': 'tt2'}</msg>
<status status="PASS" starttime="20200301 17:09:07.988" endtime="20200301 17:09:07.988"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/hasRelationship</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.988" level="INFO">GET Request using : uri=/api/v1/hasRelationship, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2', 'movieId': 'tt2'}</msg>
<msg timestamp="20200301 17:09:07.993" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.988" endtime="20200301 17:09:07.993"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:07.994" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.994" endtime="20200301 17:09:07.994"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>nm2</arg>
</arguments>
<status status="PASS" starttime="20200301 17:09:07.994" endtime="20200301 17:09:07.994"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>tt2</arg>
</arguments>
<status status="PASS" starttime="20200301 17:09:07.994" endtime="20200301 17:09:07.995"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>${false}</arg>
</arguments>
<status status="PASS" starttime="20200301 17:09:07.995" endtime="20200301 17:09:07.995"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.987" endtime="20200301 17:09:07.995" critical="yes"></status>
</test>
<test id="s1-t36" name="TestGetBaconNumber200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:07.995" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:07.995" endtime="20200301 17:09:07.996"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:07.996" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:07.996" endtime="20200301 17:09:07.996"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm1</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:07.996" level="INFO">${params} = {'actorId': 'nm1'}</msg>
<status status="PASS" starttime="20200301 17:09:07.996" endtime="20200301 17:09:07.996"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:07.997" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm1'}</msg>
<msg timestamp="20200301 17:09:08.009" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:07.996" endtime="20200301 17:09:08.009"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:08.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.009" endtime="20200301 17:09:08.010"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200301 17:09:08.010" endtime="20200301 17:09:08.010"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:07.995" endtime="20200301 17:09:08.010" critical="yes"></status>
</test>
<test id="s1-t37" name="Test2GetBaconNumberKevinBacon200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:08.011" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:08.010" endtime="20200301 17:09:08.011"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:08.011" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:08.011" endtime="20200301 17:09:08.011"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm0000102</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:08.011" level="INFO">${params} = {'actorId': 'nm0000102'}</msg>
<status status="PASS" starttime="20200301 17:09:08.011" endtime="20200301 17:09:08.011"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:08.012" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm0000102'}</msg>
<msg timestamp="20200301 17:09:08.015" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.011" endtime="20200301 17:09:08.015"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:08.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.015" endtime="20200301 17:09:08.015"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200301 17:09:08.015" endtime="20200301 17:09:08.015"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:08.010" endtime="20200301 17:09:08.015" critical="yes"></status>
</test>
<test id="s1-t38" name="TestGetBaconNumberBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:08.016" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:08.016" endtime="20200301 17:09:08.016"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:08.017" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:08.016" endtime="20200301 17:09:08.017"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=1001</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:08.017" level="INFO">${params} = {'actor': '1001'}</msg>
<status status="PASS" starttime="20200301 17:09:08.017" endtime="20200301 17:09:08.017"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:08.017" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '1001'}</msg>
<msg timestamp="20200301 17:09:08.019" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.017" endtime="20200301 17:09:08.019"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:08.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.019" endtime="20200301 17:09:08.019"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:08.016" endtime="20200301 17:09:08.019" critical="yes"></status>
</test>
<test id="s1-t39" name="TestGetBaconNumberIdNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:08.020" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:08.020" endtime="20200301 17:09:08.020"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:08.020" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:08.020" endtime="20200301 17:09:08.020"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:08.021" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 17:09:08.021" endtime="20200301 17:09:08.021"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:08.021" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200301 17:09:08.025" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.021" endtime="20200301 17:09:08.025"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:08.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.025" endtime="20200301 17:09:08.025"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:08.020" endtime="20200301 17:09:08.025" critical="yes"></status>
</test>
<test id="s1-t40" name="TestGetBaconNumberPathNoExist200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:08.026" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:08.026" endtime="20200301 17:09:08.026"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:08.027" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:08.026" endtime="20200301 17:09:08.027"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:08.027" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 17:09:08.027" endtime="20200301 17:09:08.027"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconNumber</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:08.027" level="INFO">GET Request using : uri=/api/v1/computeBaconNumber, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200301 17:09:08.031" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.027" endtime="20200301 17:09:08.031"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:08.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.031" endtime="20200301 17:09:08.031"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:08.026" endtime="20200301 17:09:08.032" critical="yes"></status>
</test>
<test id="s1-t41" name="TestBaconPath200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:08.032" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:08.032" endtime="20200301 17:09:08.032"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:08.033" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:08.032" endtime="20200301 17:09:08.033"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm3</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:08.033" level="INFO">${params} = {'actorId': 'nm3'}</msg>
<status status="PASS" starttime="20200301 17:09:08.033" endtime="20200301 17:09:08.033"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:08.033" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm3'}</msg>
<msg timestamp="20200301 17:09:08.044" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.033" endtime="20200301 17:09:08.044"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:08.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.044" endtime="20200301 17:09:08.044"></status>
</kw>
<kw name="Dictionary Should Contain Value" library="Collections">
<doc>Fails if ``value`` is not found from ``dictionary``.</doc>
<arguments>
<arg>${resp.json()}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20200301 17:09:08.045" level="FAIL">Dictionary does not contain value '2'.</msg>
<status status="FAIL" starttime="20200301 17:09:08.044" endtime="20200301 17:09:08.045"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20200301 17:09:08.032" endtime="20200301 17:09:08.045" critical="yes">Dictionary does not contain value '2'.</status>
</test>
<test id="s1-t42" name="TestBaconPathBadBodyParam400">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:08.046" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:08.045" endtime="20200301 17:09:08.046"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:08.046" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:08.046" endtime="20200301 17:09:08.046"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actor=3333</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:08.046" level="INFO">${params} = {'actor': '3333'}</msg>
<status status="PASS" starttime="20200301 17:09:08.046" endtime="20200301 17:09:08.046"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:08.047" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actor': '3333'}</msg>
<msg timestamp="20200301 17:09:08.048" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.046" endtime="20200301 17:09:08.048"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:08.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.048" endtime="20200301 17:09:08.049"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:08.045" endtime="20200301 17:09:08.049" critical="yes"></status>
</test>
<test id="s1-t43" name="TestBaconPathIdNoExist404">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:08.049" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:08.049" endtime="20200301 17:09:08.049"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:08.050" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:08.050" endtime="20200301 17:09:08.050"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=notexist</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:08.050" level="INFO">${params} = {'actorId': 'notexist'}</msg>
<status status="PASS" starttime="20200301 17:09:08.050" endtime="20200301 17:09:08.050"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:08.050" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'notexist'}</msg>
<msg timestamp="20200301 17:09:08.053" level="INFO">${resp} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.050" endtime="20200301 17:09:08.053"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>400</arg>
</arguments>
<msg timestamp="20200301 17:09:08.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.053" endtime="20200301 17:09:08.053"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:08.049" endtime="20200301 17:09:08.054" critical="yes"></status>
</test>
<test id="s1-t44" name="TestBaconPathPathNoExist200">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>localhost</arg>
<arg>http://localhost:8080</arg>
</arguments>
<msg timestamp="20200301 17:09:08.054" level="INFO">Creating Session using : alias=localhost, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200301 17:09:08.054" endtime="20200301 17:09:08.054"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20200301 17:09:08.055" level="INFO">${headers} = {'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20200301 17:09:08.054" endtime="20200301 17:09:08.055"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>actorId=nm2</arg>
</arguments>
<assign>
<var>${params}</var>
</assign>
<msg timestamp="20200301 17:09:08.055" level="INFO">${params} = {'actorId': 'nm2'}</msg>
<status status="PASS" starttime="20200301 17:09:08.055" endtime="20200301 17:09:08.055"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>localhost</arg>
<arg>/api/v1/computeBaconPath</arg>
<arg>json=${params}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200301 17:09:08.055" level="INFO">GET Request using : uri=/api/v1/computeBaconPath, params=None, allow_redirects=True, timeout=None
headers={'User-Agent': 'python-requests/2.22.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json'} 
data=None 
json={'actorId': 'nm2'}</msg>
<msg timestamp="20200301 17:09:08.060" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.055" endtime="20200301 17:09:08.060"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${resp.status_code}</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20200301 17:09:08.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20200301 17:09:08.060" endtime="20200301 17:09:08.060"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20200301 17:09:08.054" endtime="20200301 17:09:08.060" critical="yes"></status>
</test>
<status status="FAIL" starttime="20200301 17:09:07.546" endtime="20200301 17:09:08.061"></status>
</suite>
<statistics>
<total>
<stat pass="43" fail="1">Critical Tests</stat>
<stat pass="43" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="43" fail="1" id="s1" name="testPutAndGetTests">testPutAndGetTests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
